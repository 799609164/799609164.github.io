<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Spring - 标签 - </title>
        <link>http://example.org/tags/spring/</link>
        <description>Spring - 标签 - </description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 23 Jun 2020 20:17:26 &#43;0800</lastBuildDate><atom:link href="http://example.org/tags/spring/" rel="self" type="application/rss+xml" /><item>
    <title>【Spring】8_事务管理</title>
    <link>http://example.org/posts/spring8_%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/</link>
    <pubDate>Tue, 23 Jun 2020 20:17:26 &#43;0800</pubDate>
    <author></author>
    <guid>http://example.org/posts/spring8_%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/</guid>
    <description><![CDATA[Spring 框架 8 Spring 事务管理 事务的四个特性 原子性（Atomicity）：事务是一个原子操作，由一系列动作组成；事务的原子性确保动作要么全部完成，要么完]]></description>
</item><item>
    <title>【Spring】7_JDBC模板</title>
    <link>http://example.org/posts/spring7_jdbc%E6%A8%A1%E6%9D%BF/</link>
    <pubDate>Mon, 22 Jun 2020 19:28:16 &#43;0800</pubDate>
    <author></author>
    <guid>http://example.org/posts/spring7_jdbc%E6%A8%A1%E6%9D%BF/</guid>
    <description><![CDATA[Spring 框架 7 Spring JDBC Template 7.1 Spring JDBC 框架 Spring Jdbc Template 使用 Spring 的注入功能，把 DataSource 注册到 JdbcTemplate ；JdbcTemplate 的全限定命名为 org.springframework.]]></description>
</item><item>
    <title>【Spring】6_2_创建代理</title>
    <link>http://example.org/posts/spring6_2_%E5%88%9B%E5%BB%BA%E4%BB%A3%E7%90%86/</link>
    <pubDate>Sat, 20 Jun 2020 21:17:06 &#43;0800</pubDate>
    <author></author>
    <guid>http://example.org/posts/spring6_2_%E5%88%9B%E5%BB%BA%E4%BB%A3%E7%90%86/</guid>
    <description><![CDATA[Spring 框架 6 Spring AOP —— 创建代理 6.4 使用 BeanNameAutoProxyCreator 自动创建 proxy 手工创建 ProxyFactoryBean 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 &lt;beans xmlns = &#34;http://www.springframework.org/schema/beans&#34; xmlns:xsi = &#34;http://www.w3.org/2001/XMLSchema-instance&#34; xsi:schemaLocation = &#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&#34;&gt; &lt;bean id = &#34;customerService&#34; class =]]></description>
</item><item>
    <title>【Spring】6_1_面向切面编程</title>
    <link>http://example.org/posts/spring6_1_%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/</link>
    <pubDate>Fri, 19 Jun 2020 19:42:54 &#43;0800</pubDate>
    <author></author>
    <guid>http://example.org/posts/spring6_1_%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/</guid>
    <description><![CDATA[Spring 框架 6 Spring AOP —— 面向切面编程 Spring AOP（Aspect-oriented programming）：面向切面编程，是作为面向对象编程的一种补充，专]]></description>
</item><item>
    <title>【Spring】5_基于注解配置</title>
    <link>http://example.org/posts/spring5_%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/</link>
    <pubDate>Thu, 18 Jun 2020 20:22:35 &#43;0800</pubDate>
    <author></author>
    <guid>http://example.org/posts/spring5_%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/</guid>
    <description><![CDATA[Spring 框架 5 基于注解配置 5.1 @Required 注解 Spring 依赖检查 bean 配置文件用于确定的特定类型（基本，集合或对象）的所有属性被设置；在大多数情况下，只需要确保特定属性已]]></description>
</item><item>
    <title>【Spring】4_自动扫描与装配</title>
    <link>http://example.org/posts/spring4_%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E4%B8%8E%E8%A3%85%E9%85%8D/</link>
    <pubDate>Wed, 17 Jun 2020 20:36:12 &#43;0800</pubDate>
    <author></author>
    <guid>http://example.org/posts/spring4_%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E4%B8%8E%E8%A3%85%E9%85%8D/</guid>
    <description><![CDATA[Spring 框架 4 自动扫描与装配 4.1 自动扫描组件 Spring 支持自动扫描并检查指定包的 bean 或 component，可以不在 xml 文件中繁琐的声明 bean 4.1.1 手动配置与自动扫描 创建]]></description>
</item><item>
    <title>【Spring】3_2_Bean对象的作用域与生命周期</title>
    <link>http://example.org/posts/spring3_2_bean%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link>
    <pubDate>Tue, 16 Jun 2020 19:38:41 &#43;0800</pubDate>
    <author></author>
    <guid>http://example.org/posts/spring3_2_bean%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid>
    <description><![CDATA[Spring 框架 3 Spring IOC 容器 —— Bean 对象的作用域与生命周期 3.5 Bean 的作用域 Spring 中支持的五种类型的作用域 singleton — 单例模式，由 IOC 容器返回一个唯一的 bean 实例 prototype — 原型模式，被]]></description>
</item><item>
    <title>【Spring】3_1_Bean对象的定义及注入</title>
    <link>http://example.org/posts/spring3_1_bean%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AE%9A%E4%B9%89%E5%8F%8A%E6%B3%A8%E5%85%A5/</link>
    <pubDate>Mon, 15 Jun 2020 20:44:30 &#43;0800</pubDate>
    <author></author>
    <guid>http://example.org/posts/spring3_1_bean%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AE%9A%E4%B9%89%E5%8F%8A%E6%B3%A8%E5%85%A5/</guid>
    <description><![CDATA[Spring 框架 3 Spring IOC 容器 —— Bean 对象的定义及注入 3.1 理论 控制反转（IOC）：IOC 是一种设计思想，指将对象交给容器控制，而非在对象内部中控制 依赖注入（D]]></description>
</item><item>
    <title>【Spring】2_入门程序</title>
    <link>http://example.org/posts/spring2_%E5%85%A5%E9%97%A8%E7%A8%8B%E5%BA%8F/</link>
    <pubDate>Sat, 13 Jun 2020 20:03:14 &#43;0800</pubDate>
    <author></author>
    <guid>http://example.org/posts/spring2_%E5%85%A5%E9%97%A8%E7%A8%8B%E5%BA%8F/</guid>
    <description><![CDATA[Spring 框架 2 入门程序 2.1 新建项目工程 mvn archetype:generate -DgroupId=com.shiyanlou.demo -DartifactId=springExample -DarchetypeArtifactId=maven-archetype-quickstart Group Id：包的目录结构，一般为域名的倒序 Atifact Id：项目名称 archetype Artifact Id：使用的 maven 模板名称c 2.2 导入所需 jar 包 pom.xml 1]]></description>
</item><item>
    <title>【Spring】1_概述</title>
    <link>http://example.org/posts/spring1_%E6%A6%82%E8%BF%B0/</link>
    <pubDate>Fri, 12 Jun 2020 21:37:05 &#43;0800</pubDate>
    <author></author>
    <guid>http://example.org/posts/spring1_%E6%A6%82%E8%BF%B0/</guid>
    <description><![CDATA[Spring 框架 1 概述 1.1 概念 Spring 是一个容器，通过反转控制（IoC）和依赖注入（DI）来实现高内聚、低耦合的应用 它可以整合很多第三方框架，还提供面向切面编]]></description>
</item></channel>
</rss>
